[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My First Website",
    "section": "",
    "text": "#| echo: false\n\n#| label: setup\n\nlibrary(tidyverse)\n\n\ndata &lt;- read_csv(\"vazgen.csv\")\n\nNew names:\nRows: 15285 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\ndata2 &lt;- read_csv(\"sevan.csv\")\n\nNew names:\nRows: 2290 Columns: 15\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): direction, device dbl (12): ...1, entry_id, uv, lux, temperature,\npressure, humidity, pm1, pm... dttm (1): time\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\n\n\n# Load necessary libraries\nlibrary(tidyverse)\nlibrary(lubridate)  # For handling date and time data\n\n# Read the dataset\ndata &lt;- read.csv(\"vazgen.csv\")\n\n# Assuming the dataset has columns named 'time' and 'temperature'\n# Convert 'time' to a date format if it is not already\ndata$time &lt;- as.Date(data$time)\n\n# Create a season variable\ndata &lt;- data %&gt;%\n  mutate(season = case_when(\n    month(time) %in% 3:5 ~ \"Spring\",\n    month(time) %in% 6:8 ~ \"Summer\",\n    month(time) %in% 9:11 ~ \"Autumn\",\n    month(time) %in% c(12, 1, 2) ~ \"Winter\"\n  ))\n\n# Add a numeric day of the year variable for polar coordinates\ndata &lt;- data %&gt;%\n  mutate(day_of_year = yday(time))\n\n# Make the circular plot\np &lt;- ggplot(data, aes(x=day_of_year, y=temperature, color=season)) +\n  geom_line() +\n  scale_x_continuous(breaks = c(1, 91, 182, 274), labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")) +\n  labs(title = \"Temperature Over Time by Season\",\n       x = \"Day of Year\",\n       y = \"Temperature\",\n       color = \"Season\") +\n  theme_minimal() +\n  coord_polar(theta = \"x\")\n\nprint(p)\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\nlibrary(lubridate)  \n\ndata &lt;- read.csv(\"sevan.csv\")  \n\n\ndata$time &lt;- as.Date(data$time)\n\ndata &lt;- data %&gt;%\n  mutate(season = case_when(\n    month(time) %in% 3:5 ~ \"Spring\",\n    month(time) %in% 6:8 ~ \"Summer\",\n    month(time) %in% 9:11 ~ \"Autumn\",\n    month(time) %in% c(12, 1, 2) ~ \"Winter\"\n  ))\n\ndata &lt;- data %&gt;%\n  mutate(day_of_year = yday(time))\n\np &lt;- ggplot(data, aes(x = time, y = temperature, color = season)) +\n  geom_line() +\n  scale_x_continuous(breaks = c(1, 91, 182, 274), labels = c(\"Winter\", \"Spring\", \"Summer\", \"Autumn\")) +\n  labs(title = \"Temperature Over Time by Season\",\n       x = \"Day of Year\",\n       y = \"Temperature\",\n       color = \"Season\") +\n  theme_minimal() +\n  coord_polar(theta = \"x\")\n\nprint(p)\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`)."
  },
  {
    "objectID": "sources.html",
    "href": "sources.html",
    "title": "sources",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "sources.html#quarto",
    "href": "sources.html#quarto",
    "title": "sources",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "sources.html#running-code",
    "href": "sources.html#running-code",
    "title": "sources",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "source1.html",
    "href": "source1.html",
    "title": "Source 1",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "source1.html#quarto",
    "href": "source1.html#quarto",
    "title": "Source 1",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "source1.html#running-code",
    "href": "source1.html#running-code",
    "title": "Source 1",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "source2.html",
    "href": "source2.html",
    "title": "source2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "source2.html#quarto",
    "href": "source2.html#quarto",
    "title": "source2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "source2.html#running-code",
    "href": "source2.html#running-code",
    "title": "source2",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  }
]